<?xml version="1.0"?>
<doc>
    <assembly>
        <name>api.adm.gestaosala</name>
    </assembly>
    <members>
        <member name="M:api.adm.gestaosala.Controllers.AgendaSalaController.Get">
            <summary>
             busca todas salas agendadas na base
            </summary>   
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.AgendaSalaController.Post(api.adm.gestaosala.DTO.AgendaSalaDTO)">
            <summary>
             insere um agendamento
            </summary>
            <param name="agendaSalaDTO">agendamento</param>     
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.AgendaSalaController.GetSalaAgendada(api.adm.gestaosala.DTO.AgendaSalaDTO)">
            <summary>
             busca salas agendadas na base pelo id da sala e data de agendamento
            </summary>   
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.SalaController.Post(api.adm.gestaosala.DTO.SalaDTO)">
            <summary>
             cadastra uma sala nova
            </summary>
            <param name="salaDTO">Cadastro de nova sala</param>     
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.SalaController.Get">
            <summary>
             busca salas na base
            </summary>   
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.SalaController.Get(System.Int32)">
            <summary>
             busca salas na base por id de sala
            </summary>   
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.SalaController.Delete(System.Int32)">
            <summary>
             Deleta uma Sala cadastrada por id
            </summary>   
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.UsuarioController.GetLogin(api.adm.gestaosala.DTO.LoginDTO)">
            <summary>
             usuario para colsulta de login
            </summary>
            <param name="usuario">usuario para consulta de login</param>     
            <returns></returns>       
        </member>
        <member name="M:api.adm.gestaosala.Controllers.UsuarioController.Insert(api.adm.gestaosala.DTO.UsuarioDTO)">
            <summary>
             Insere um novo cliente para cadastro
            </summary>
            <param name="usuario">novo cliente que será inserido na base para cadastro</param>     
            <returns>retorna um objeto Cliente</returns>       
        </member>
        <member name="P:api.adm.gestaosala.DTO.AgendaSalaDTO.AgendamentoId">
            <summary>
            Id do agendamento
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.AgendaSalaDTO.SalaId">
            <summary>
            Id da Sala
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.AgendaSalaDTO.AgendamentoInicial">
            <summary>
            Data inicial
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.AgendaSalaDTO.AgendamentoFinal">
            <summary>
            Data final
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.AgendaSalaDTO.AgendamentoStatus">
            <summary>
            Status
            </summary>
            <value></value>      
        </member>
        <member name="P:api.adm.gestaosala.DTO.LoginDTO.Login">
            <summary>
            Login
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.LoginDTO.Senha">
            <summary>
            Senha
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.SalaDTO.SalaTitulo">
            <summary>
            Título da Sala
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.SalaDTO.SalaDescricao">
            <summary>
            Descrição da Sala
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.UsuarioDTO.Nome">
            <summary>
            Nome de usuario
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.UsuarioDTO.Login">
            <summary>
            Login
            </summary>
            <value></value>
        </member>
        <member name="P:api.adm.gestaosala.DTO.UsuarioDTO.Senha">
            <summary>
            Senha
            </summary>
            <value></value>
        </member>
        <member name="T:api.adm.gestaosala.Startup">
            <summary>
                
            </summary>
        </member>
        <member name="M:api.adm.gestaosala.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
                
            </summary>
        </member>
        <member name="P:api.adm.gestaosala.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:api.adm.gestaosala.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:api.adm.gestaosala.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
        <member name="T:api.adm.gestaosala.Swagger.StoreHeaderParameterOperationFilter">
            <summary>
            Documento para injetar o storeid no Swagger
            </summary>
        </member>
        <member name="M:api.adm.gestaosala.Swagger.StoreHeaderParameterOperationFilter.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
    </members>
</doc>
